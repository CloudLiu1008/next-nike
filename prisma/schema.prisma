// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  orders    Order[]  // 用户的订单关系
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String    // 产品名称
  description String    // 产品描述
  price       Float     // 产品价格
  images      String[]  // 产品图片URL数组
  sizes       String[]  // 可用尺码
  colors      String[]  // 可用颜色
  stock       Int       // 库存数量
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int       // 分类外键
  orderItems  OrderItem[] // 订单项关系
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    // 分类名称
  description String?   // 分类描述
  products    Product[] // 分类下的产品
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Order {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id])
  userId      Int         // 用户外键
  items       OrderItem[] // 订单项
  totalAmount Float       // 订单总金额
  status      String      // 订单状态
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int      // 订单外键
  product   Product  @relation(fields: [productId], references: [id])
  productId Int      // 产品外键
  quantity  Int      // 购买数量
  price     Float    // 购买时的价格
  size      String   // 选择的尺码
  color     String   // 选择的颜色
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
